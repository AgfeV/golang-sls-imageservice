# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: imageservice
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
  endpointType: REGIONAL
  apiGateway:
    binaryMediaTypes:
      - "multipart/form-data"

  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - "s3:PutObject"
      Resource:
       - !Sub arn:aws:s3:::watermark-image-bucket/*
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:*:*:table/"
            - "Ref" : "imageTable"

  # you can define service wide environment variables here
  environment:
    TABLE_NAME: imageTable

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  uploadimage:
    handler: bin/uploadimage
    events:
      - http:
          path: uploadimage
          method: post
  find_all_images:
    handler: bin/findall
    events:
      - http:
          path: findall
          method: get

# you can add CloudFormation resource templates here
resources:
  Resources:
    imagestoragebucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: watermark-image-bucket
    imageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: imageTable
        AttributeDefinitions:
          -
            AttributeName: "UserID"
            AttributeType: S
          -
            AttributeName: "ImageID"
            AttributeType: S
        KeySchema:
          -
            AttributeName: "UserID"
            KeyType: HASH
          -
            AttributeName: "ImageID"
            KeyType: RANGE